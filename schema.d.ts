/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/v2/ability/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Abilities provide passive effects for Pokémon in battle or in the overworld. Pokémon have multiple possible abilities but can have only one ability at a time. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Ability) for greater detail. */
    get: operations["ability_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/ability/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Abilities provide passive effects for Pokémon in battle or in the overworld. Pokémon have multiple possible abilities but can have only one ability at a time. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Ability) for greater detail. */
    get: operations["ability_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/berry/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List berries
     * @description Berries are small fruits that can provide HP and status condition restoration, stat enhancement, and even damage negation when eaten by Pokémon. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Berry) for greater detail.
     */
    get: operations["berry_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/berry/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get a berry
     * @description Berries are small fruits that can provide HP and status condition restoration, stat enhancement, and even damage negation when eaten by Pokémon. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Berry) for greater detail.
     */
    get: operations["berry_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/berry-firmness/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List berry firmness
     * @description Berries can be soft or hard. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Category:Berries_by_firmness) for greater detail.
     */
    get: operations["berry_firmness_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/berry-firmness/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get berry by firmness
     * @description Berries can be soft or hard. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Category:Berries_by_firmness) for greater detail.
     */
    get: operations["berry_firmness_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/berry-flavor/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List berry flavors
     * @description Flavors determine whether a Pokémon will benefit or suffer from eating a berry based on their **nature**. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Flavor) for greater detail.
     */
    get: operations["berry_flavor_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/berry-flavor/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get berries by flavor
     * @description Flavors determine whether a Pokémon will benefit or suffer from eating a berry based on their **nature**. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Flavor) for greater detail.
     */
    get: operations["berry_flavor_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/characteristic/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List charecterictics
     * @description Characteristics indicate which stat contains a Pokémon's highest IV. A Pokémon's Characteristic is determined by the remainder of its highest IV divided by 5 (gene_modulo). Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Characteristic) for greater detail.
     */
    get: operations["characteristic_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/characteristic/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get characteristic
     * @description Characteristics indicate which stat contains a Pokémon's highest IV. A Pokémon's Characteristic is determined by the remainder of its highest IV divided by 5 (gene_modulo). Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Characteristic) for greater detail.
     */
    get: operations["characteristic_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/contest-type/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List contest types
     * @description Contest types are categories judges used to weigh a Pokémon's condition in Pokémon contests. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Contest_condition) for greater detail.
     */
    get: operations["contest_type_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/contest-type/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get contest type
     * @description Contest types are categories judges used to weigh a Pokémon's condition in Pokémon contests. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Contest_condition) for greater detail.
     */
    get: operations["contest_type_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/contest-effect/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List contest effects
     * @description Contest effects refer to the effects of moves when used in contests.
     */
    get: operations["contest_effect_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/contest-effect/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get contest effect
     * @description Contest effects refer to the effects of moves when used in contests.
     */
    get: operations["contest_effect_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/egg-group/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List egg groups
     * @description Egg Groups are categories which determine which Pokémon are able to interbreed. Pokémon may belong to either one or two Egg Groups. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Egg_Group) for greater detail.
     */
    get: operations["egg_group_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/egg-group/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get egg group
     * @description Egg Groups are categories which determine which Pokémon are able to interbreed. Pokémon may belong to either one or two Egg Groups. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Egg_Group) for greater detail.
     */
    get: operations["egg_group_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/encounter-method/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List encounter methods
     * @description Methods by which the player might can encounter Pokémon in the wild, e.g., walking in tall grass. Check out Bulbapedia for greater detail.
     */
    get: operations["encounter_method_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/encounter-method/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get encounter method
     * @description Methods by which the player might can encounter Pokémon in the wild, e.g., walking in tall grass. Check out Bulbapedia for greater detail.
     */
    get: operations["encounter_method_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/encounter-condition/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List encounter conditions
     * @description Conditions which affect what pokemon might appear in the wild, e.g., day or night.
     */
    get: operations["encounter_condition_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/encounter-condition/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get encounter condition
     * @description Conditions which affect what pokemon might appear in the wild, e.g., day or night.
     */
    get: operations["encounter_condition_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/encounter-condition-value/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List encounter condition values
     * @description Encounter condition values are the various states that an encounter condition can have, i.e., time of day can be either day or night.
     */
    get: operations["encounter_condition_value_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/encounter-condition-value/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get encounter condition value
     * @description Encounter condition values are the various states that an encounter condition can have, i.e., time of day can be either day or night.
     */
    get: operations["encounter_condition_value_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/evolution-chain/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List evolution chains
     * @description Evolution chains are essentially family trees. They start with the lowest stage within a family and detail evolution conditions for each as well as Pokémon they can evolve into up through the hierarchy.
     */
    get: operations["evolution_chain_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/evolution-chain/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get evolution chain
     * @description Evolution chains are essentially family trees. They start with the lowest stage within a family and detail evolution conditions for each as well as Pokémon they can evolve into up through the hierarchy.
     */
    get: operations["evolution_chain_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/evolution-trigger/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List evolution triggers
     * @description Evolution triggers are the events and conditions that cause a Pokémon to evolve. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Methods_of_evolution) for greater detail.
     */
    get: operations["evolution_trigger_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/evolution-trigger/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get evolution trigger
     * @description Evolution triggers are the events and conditions that cause a Pokémon to evolve. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Methods_of_evolution) for greater detail.
     */
    get: operations["evolution_trigger_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/generation/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List genrations
     * @description A generation is a grouping of the Pokémon games that separates them based on the Pokémon they include. In each generation, a new set of Pokémon, Moves, Abilities and Types that did not exist in the previous generation are released.
     */
    get: operations["generation_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/generation/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get genration
     * @description A generation is a grouping of the Pokémon games that separates them based on the Pokémon they include. In each generation, a new set of Pokémon, Moves, Abilities and Types that did not exist in the previous generation are released.
     */
    get: operations["generation_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/gender/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List genders
     * @description Genders were introduced in Generation II for the purposes of breeding Pokémon but can also result in visual differences or even different evolutionary lines. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Gender) for greater detail.
     */
    get: operations["gender_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/gender/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get gender
     * @description Genders were introduced in Generation II for the purposes of breeding Pokémon but can also result in visual differences or even different evolutionary lines. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Gender) for greater detail.
     */
    get: operations["gender_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/growth-rate/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List growth rates
     * @description Growth rates are the speed with which Pokémon gain levels through experience. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Experience) for greater detail.
     */
    get: operations["growth_rate_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/growth-rate/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get growth rate
     * @description Growth rates are the speed with which Pokémon gain levels through experience. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Experience) for greater detail.
     */
    get: operations["growth_rate_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/item/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List items
     * @description An item is an object in the games which the player can pick up, keep in their bag, and use in some manner. They have various uses, including healing, powering up, helping catch Pokémon, or to access a new area.
     */
    get: operations["item_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/item/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get item
     * @description An item is an object in the games which the player can pick up, keep in their bag, and use in some manner. They have various uses, including healing, powering up, helping catch Pokémon, or to access a new area.
     */
    get: operations["item_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/item-category/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List item categories
     * @description Item categories determine where items will be placed in the players bag.
     */
    get: operations["item_category_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/item-category/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get item category
     * @description Item categories determine where items will be placed in the players bag.
     */
    get: operations["item_category_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/item-attribute/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List item attributes
     * @description Item attributes define particular aspects of items, e.g."usable in battle" or "consumable".
     */
    get: operations["item_attribute_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/item-attribute/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get item attribute
     * @description Item attributes define particular aspects of items, e.g."usable in battle" or "consumable".
     */
    get: operations["item_attribute_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/item-fling-effect/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List item fling effects
     * @description The various effects of the move"Fling" when used with different items.
     */
    get: operations["item_fling_effect_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/item-fling-effect/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get item fling effect
     * @description The various effects of the move"Fling" when used with different items.
     */
    get: operations["item_fling_effect_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/item-pocket/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List item pockets
     * @description Pockets within the players bag used for storing items by category.
     */
    get: operations["item_pocket_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/item-pocket/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get item pocket
     * @description Pockets within the players bag used for storing items by category.
     */
    get: operations["item_pocket_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/language/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List languages
     * @description Languages for translations of API resource information.
     */
    get: operations["language_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/language/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get language
     * @description Languages for translations of API resource information.
     */
    get: operations["language_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/location/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List locations
     * @description Locations that can be visited within the games. Locations make up sizable portions of regions, like cities or routes.
     */
    get: operations["location_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/location/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get location
     * @description Locations that can be visited within the games. Locations make up sizable portions of regions, like cities or routes.
     */
    get: operations["location_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/location-area/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List location areas
     * @description Location areas are sections of areas, such as floors in a building or cave. Each area has its own set of possible Pokémon encounters.
     */
    get: operations["location_area_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/location-area/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get location area
     * @description Location areas are sections of areas, such as floors in a building or cave. Each area has its own set of possible Pokémon encounters.
     */
    get: operations["location_area_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/machine/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List machines
     * @description Machines are the representation of items that teach moves to Pokémon. They vary from version to version, so it is not certain that one specific TM or HM corresponds to a single Machine.
     */
    get: operations["machine_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/machine/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get machine
     * @description Machines are the representation of items that teach moves to Pokémon. They vary from version to version, so it is not certain that one specific TM or HM corresponds to a single Machine.
     */
    get: operations["machine_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/move/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List moves
     * @description Moves are the skills of Pokémon in battle. In battle, a Pokémon uses one move each turn. Some moves (including those learned by Hidden Machine) can be used outside of battle as well, usually for the purpose of removing obstacles or exploring new areas.
     */
    get: operations["move_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/move/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get move
     * @description Moves are the skills of Pokémon in battle. In battle, a Pokémon uses one move each turn. Some moves (including those learned by Hidden Machine) can be used outside of battle as well, usually for the purpose of removing obstacles or exploring new areas.
     */
    get: operations["move_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/move-ailment/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List move meta ailments
     * @description Move Ailments are status conditions caused by moves used during battle. See [Bulbapedia](https://bulbapedia.bulbagarden.net/wiki/Status_condition) for greater detail.
     */
    get: operations["move_ailment_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/move-ailment/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get move meta ailment
     * @description Move Ailments are status conditions caused by moves used during battle. See [Bulbapedia](https://bulbapedia.bulbagarden.net/wiki/Status_condition) for greater detail.
     */
    get: operations["move_ailment_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/move-battle-style/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List move battle styles
     * @description Styles of moves when used in the Battle Palace. See [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Battle_Frontier_(Generation_III)) for greater detail.
     */
    get: operations["move_battle_style_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/move-battle-style/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get move battle style
     * @description Styles of moves when used in the Battle Palace. See [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Battle_Frontier_(Generation_III)) for greater detail.
     */
    get: operations["move_battle_style_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/move-category/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List move meta categories
     * @description Very general categories that loosely group move effects.
     */
    get: operations["move_category_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/move-category/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get move meta category
     * @description Very general categories that loosely group move effects.
     */
    get: operations["move_category_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/move-damage-class/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List move damage classes
     * @description Damage classes moves can have, e.g. physical, special, or non-damaging.
     */
    get: operations["move_damage_class_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/move-damage-class/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get move damage class
     * @description Damage classes moves can have, e.g. physical, special, or non-damaging.
     */
    get: operations["move_damage_class_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/move-learn-method/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List move learn methods
     * @description Methods by which Pokémon can learn moves.
     */
    get: operations["move_learn_method_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/move-learn-method/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get move learn method
     * @description Methods by which Pokémon can learn moves.
     */
    get: operations["move_learn_method_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/move-target/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List move targets
     * @description Targets moves can be directed at during battle. Targets can be Pokémon, environments or even other moves.
     */
    get: operations["move_target_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/move-target/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get move target
     * @description Targets moves can be directed at during battle. Targets can be Pokémon, environments or even other moves.
     */
    get: operations["move_target_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/nature/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List natures
     * @description Natures influence how a Pokémon's stats grow. See [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Nature) for greater detail.
     */
    get: operations["nature_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/nature/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get nature
     * @description Natures influence how a Pokémon's stats grow. See [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Nature) for greater detail.
     */
    get: operations["nature_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pal-park-area/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List pal park areas
     * @description Areas used for grouping Pokémon encounters in Pal Park. They're like habitats that are specific to Pal Park.
     */
    get: operations["pal_park_area_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pal-park-area/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get pal park area
     * @description Areas used for grouping Pokémon encounters in Pal Park. They're like habitats that are specific to Pal Park.
     */
    get: operations["pal_park_area_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pokedex/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List pokedex
     * @description A Pokédex is a handheld electronic encyclopedia device; one which is capable of recording and retaining information of the various Pokémon in a given region with the exception of the national dex and some smaller dexes related to portions of a region. See [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Pokedex) for greater detail.
     */
    get: operations["pokedex_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pokedex/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get pokedex
     * @description A Pokédex is a handheld electronic encyclopedia device; one which is capable of recording and retaining information of the various Pokémon in a given region with the exception of the national dex and some smaller dexes related to portions of a region. See [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Pokedex) for greater detail.
     */
    get: operations["pokedex_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pokemon/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List pokemon
     * @description Pokémon are the creatures that inhabit the world of the Pokémon games. They can be caught using Pokéballs and trained by battling with other Pokémon. Each Pokémon belongs to a specific species but may take on a variant which makes it differ from other Pokémon of the same species, such as base stats, available abilities and typings. See [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Pok%C3%A9mon_(species)) for greater detail.
     */
    get: operations["pokemon_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pokemon/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get pokemon
     * @description Pokémon are the creatures that inhabit the world of the Pokémon games. They can be caught using Pokéballs and trained by battling with other Pokémon. Each Pokémon belongs to a specific species but may take on a variant which makes it differ from other Pokémon of the same species, such as base stats, available abilities and typings. See [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Pok%C3%A9mon_(species)) for greater detail.
     */
    get: operations["pokemon_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pokemon-color/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List pokemon colors
     * @description Colors used for sorting Pokémon in a Pokédex. The color listed in the Pokédex is usually the color most apparent or covering each Pokémon's body. No orange category exists; Pokémon that are primarily orange are listed as red or brown.
     */
    get: operations["pokemon_color_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pokemon-color/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get pokemon color
     * @description Colors used for sorting Pokémon in a Pokédex. The color listed in the Pokédex is usually the color most apparent or covering each Pokémon's body. No orange category exists; Pokémon that are primarily orange are listed as red or brown.
     */
    get: operations["pokemon_color_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pokemon-form/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List pokemon forms
     * @description Some Pokémon may appear in one of multiple, visually different forms. These differences are purely cosmetic. For variations within a Pokémon species, which do differ in more than just visuals, the 'Pokémon' entity is used to represent such a variety.
     */
    get: operations["pokemon_form_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pokemon-form/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get pokemon form
     * @description Some Pokémon may appear in one of multiple, visually different forms. These differences are purely cosmetic. For variations within a Pokémon species, which do differ in more than just visuals, the 'Pokémon' entity is used to represent such a variety.
     */
    get: operations["pokemon_form_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pokemon-habitat/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List pokemom habitas
     * @description Habitats are generally different terrain Pokémon can be found in but can also be areas designated for rare or legendary Pokémon.
     */
    get: operations["pokemon_habitat_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pokemon-habitat/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get pokemom habita
     * @description Habitats are generally different terrain Pokémon can be found in but can also be areas designated for rare or legendary Pokémon.
     */
    get: operations["pokemon_habitat_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pokemon-shape/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List pokemon shapes
     * @description Shapes used for sorting Pokémon in a Pokédex.
     */
    get: operations["pokemon_shape_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pokemon-shape/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get pokemon shape
     * @description Shapes used for sorting Pokémon in a Pokédex.
     */
    get: operations["pokemon_shape_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pokemon-species/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List pokemon species
     * @description A Pokémon Species forms the basis for at least one Pokémon. Attributes of a Pokémon species are shared across all varieties of Pokémon within the species. A good example is Wormadam; Wormadam is the species which can be found in three different varieties, Wormadam-Trash, Wormadam-Sandy and Wormadam-Plant.
     */
    get: operations["pokemon_species_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pokemon-species/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get pokemon species
     * @description A Pokémon Species forms the basis for at least one Pokémon. Attributes of a Pokémon species are shared across all varieties of Pokémon within the species. A good example is Wormadam; Wormadam is the species which can be found in three different varieties, Wormadam-Trash, Wormadam-Sandy and Wormadam-Plant.
     */
    get: operations["pokemon_species_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pokeathlon-stat/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List pokeathlon stats
     * @description Pokeathlon Stats are different attributes of a Pokémon's performance in Pokéathlons. In Pokéathlons, competitions happen on different courses; one for each of the different Pokéathlon stats. See [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Pok%C3%A9athlon) for greater detail.
     */
    get: operations["pokeathlon_stat_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pokeathlon-stat/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get pokeathlon stat
     * @description Pokeathlon Stats are different attributes of a Pokémon's performance in Pokéathlons. In Pokéathlons, competitions happen on different courses; one for each of the different Pokéathlon stats. See [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Pok%C3%A9athlon) for greater detail.
     */
    get: operations["pokeathlon_stat_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/region/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List regions
     * @description A region is an organized area of the Pokémon world. Most often, the main difference between regions is the species of Pokémon that can be encountered within them.
     */
    get: operations["region_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/region/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get region
     * @description A region is an organized area of the Pokémon world. Most often, the main difference between regions is the species of Pokémon that can be encountered within them.
     */
    get: operations["region_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/stat/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List stats
     * @description Stats determine certain aspects of battles. Each Pokémon has a value for each stat which grows as they gain levels and can be altered momentarily by effects in battles.
     */
    get: operations["stat_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/stat/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get stat
     * @description Stats determine certain aspects of battles. Each Pokémon has a value for each stat which grows as they gain levels and can be altered momentarily by effects in battles.
     */
    get: operations["stat_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/super-contest-effect/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List super contest effects
     * @description Super contest effects refer to the effects of moves when used in super contests.
     */
    get: operations["super_contest_effect_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/super-contest-effect/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get super contest effect
     * @description Super contest effects refer to the effects of moves when used in super contests.
     */
    get: operations["super_contest_effect_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/type/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List types
     * @description Types are properties for Pokémon and their moves. Each type has three properties: which types of Pokémon it is super effective against, which types of Pokémon it is not very effective against, and which types of Pokémon it is completely ineffective against.
     */
    get: operations["type_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/type/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get types
     * @description Types are properties for Pokémon and their moves. Each type has three properties: which types of Pokémon it is super effective against, which types of Pokémon it is not very effective against, and which types of Pokémon it is completely ineffective against.
     */
    get: operations["type_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/version/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List versions
     * @description Versions of the games, e.g., Red, Blue or Yellow.
     */
    get: operations["version_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/version/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get version
     * @description Versions of the games, e.g., Red, Blue or Yellow.
     */
    get: operations["version_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/version-group/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List version groups
     * @description Version groups categorize highly similar versions of the games.
     */
    get: operations["version_group_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/version-group/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get version group
     * @description Version groups categorize highly similar versions of the games.
     */
    get: operations["version_group_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/v2/pokemon/{pokemon_id}/encounters": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get pokemon encounter
     * @description Handles Pokemon Encounters as a sub-resource.
     */
    get: operations["pokemon_encounters_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    AbilityChange: {
      version_group: components["schemas"]["VersionGroupSummary"];
      readonly effect_entries: components["schemas"]["AbilityChangeEffectText"][];
    };
    AbilityChangeEffectText: {
      effect: string;
      language: components["schemas"]["LanguageSummary"];
    };
    AbilityDetail: {
      readonly id: number;
      name: string;
      is_main_series?: boolean;
      generation: components["schemas"]["GenerationSummary"];
      readonly names: components["schemas"]["AbilityName"][];
      readonly effect_entries: components["schemas"]["AbilityEffectText"][];
      readonly effect_changes: components["schemas"]["AbilityChange"][];
      readonly flavor_text_entries: components["schemas"]["AbilityFlavorText"][];
      readonly pokemon: {
        is_hidden: boolean;
        /** Format: int32 */
        slot: number;
        pokemon: {
          name: string;
          /** Format: uri */
          url: string;
        };
      }[];
    };
    AbilityEffectText: {
      effect: string;
      short_effect: string;
      language: components["schemas"]["LanguageSummary"];
    };
    AbilityFlavorText: {
      flavor_text: string;
      language: components["schemas"]["LanguageSummary"];
      version_group: components["schemas"]["VersionGroupSummary"];
    };
    AbilityName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    AbilitySummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    BerryDetail: {
      readonly id: number;
      name: string;
      growth_time: number;
      max_harvest: number;
      natural_gift_power: number;
      size: number;
      smoothness: number;
      soil_dryness: number;
      firmness: components["schemas"]["BerryFirmnessSummary"];
      readonly flavors: {
        potency: number;
        flavor: {
          /** @description The name of the flavor */
          name?: string;
          /**
           * Format: uri
           * @description The URL to get more information about the flavor
           */
          url?: string;
        };
      }[];
      item: components["schemas"]["ItemSummary"];
      natural_gift_type: components["schemas"]["TypeSummary"];
    };
    BerryFirmnessDetail: {
      readonly id: number;
      name: string;
      readonly berries: components["schemas"]["BerrySummary"][];
      readonly names: components["schemas"]["BerryFirmnessName"][];
    };
    BerryFirmnessName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    BerryFirmnessSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    BerryFlavorDetail: {
      readonly id: number;
      name: string;
      readonly berries: {
        potency: number;
        berry: {
          /** @description The name of the berry */
          name?: string;
          /**
           * Format: uri
           * @description The URL to get more information about the berry
           */
          url?: string;
        };
      }[];
      contest_type: components["schemas"]["ContestTypeSummary"];
      readonly names: components["schemas"]["BerryFlavorName"][];
    };
    BerryFlavorName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    BerryFlavorSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    BerrySummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    CharacteristicDescription: {
      description?: string;
      language: components["schemas"]["LanguageSummary"];
    };
    CharacteristicDetail: {
      readonly id: number;
      gene_modulo: number;
      readonly possible_values: number[];
      highest_stat: components["schemas"]["StatSummary"];
      readonly descriptions: components["schemas"]["CharacteristicDescription"][];
    };
    CharacteristicSummary: {
      /** Format: uri */
      readonly url: string;
    };
    ContestEffectDetail: {
      readonly id: number;
      appeal: number;
      jam: number;
      readonly effect_entries: components["schemas"]["ContestEffectEffectText"][];
      readonly flavor_text_entries: components["schemas"]["ContestEffectFlavorText"][];
    };
    ContestEffectEffectText: {
      effect: string;
      language: components["schemas"]["LanguageSummary"];
    };
    ContestEffectFlavorText: {
      flavor_text: string;
      language: components["schemas"]["LanguageSummary"];
    };
    ContestEffectSummary: {
      /** Format: uri */
      readonly url: string;
    };
    ContestTypeDetail: {
      readonly id: number;
      name: string;
      readonly berry_flavor: components["schemas"]["BerryFlavorSummary"];
      readonly names: components["schemas"]["ContestTypeName"][];
    };
    ContestTypeName: {
      name: string;
      color: string;
      language: components["schemas"]["LanguageSummary"];
    };
    ContestTypeSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    EggGroupDetail: {
      readonly id: number;
      name: string;
      readonly names: components["schemas"]["EggGroupName"][];
      readonly pokemon_species: {
        /** @description Pokemon species name. */
        name?: string;
        /**
         * Format: uri
         * @description The URL to get more information about the species
         */
        url?: string;
      }[];
    };
    EggGroupName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    EggGroupSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    EncounterConditionDetail: {
      readonly id: number;
      name: string;
      readonly values: components["schemas"]["EncounterConditionValueSummary"][];
      readonly names: components["schemas"]["EncounterConditionName"][];
    };
    EncounterConditionName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    EncounterConditionSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    EncounterConditionValueDetail: {
      readonly id: number;
      name: string;
      condition: components["schemas"]["EncounterConditionSummary"];
      readonly names: components["schemas"]["EncounterConditionValueName"][];
    };
    EncounterConditionValueName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    EncounterConditionValueSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    EncounterMethodDetail: {
      readonly id: number;
      name: string;
      order?: number | null;
      readonly names: components["schemas"]["EncounterMethodName"][];
    };
    EncounterMethodName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    EncounterMethodSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    EvolutionChainDetail: {
      readonly id: number;
      baby_trigger_item: components["schemas"]["ItemSummary"];
      readonly chain: {
        evolution_details: unknown[];
        evolves_to: {
          evolution_details: {
            gender: {
              name: string;
              /** Format: uri */
              url: string;
            } | null;
            held_item: {
              name: string;
              /** Format: uri */
              url: string;
            } | null;
            item: {
              name: string;
              /** Format: uri */
              url: string;
            } | null;
            known_move: Record<string, never> | null;
            known_move_type: Record<string, never> | null;
            location: {
              name: string;
              /** Format: uri */
              url: string;
            } | null;
            /** Format: int32 */
            min_affection: number | null;
            /** Format: int32 */
            min_beauty: number | null;
            /** Format: int32 */
            min_happiness: number | null;
            /** Format: int32 */
            min_level: number | null;
            needs_overworld_rain: boolean | null;
            party_species: string | null;
            party_type: string | null;
            relative_physical_stats: string | null;
            time_of_day: string;
            trade_species: string | null;
            trigger: {
              name: string;
              /** Format: uri */
              url: string;
            };
            turn_upside_down: boolean;
          }[];
          is_baby: boolean;
          species: {
            name: string;
            /** Format: uri */
            url: string;
          };
        }[];
        is_baby: boolean;
        species: {
          name: string;
          /** Format: uri */
          url: string;
        };
      };
    };
    EvolutionChainSummary: {
      /** Format: uri */
      readonly url: string;
    };
    EvolutionTriggerDetail: {
      readonly id: number;
      name: string;
      readonly names: components["schemas"]["EvolutionTriggerName"][];
      readonly pokemon_species: {
        name: string;
        /** Format: uri */
        url: string;
      }[];
    };
    EvolutionTriggerName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    EvolutionTriggerSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    Experience: {
      level: number;
      experience: number;
    };
    GenderDetail: {
      readonly id: number;
      name: string;
      readonly pokemon_species_details: {
        /** Format: int32 */
        rate: number;
        pokemon_species: {
          name: string;
          /** Format: uri */
          url: string;
        };
      }[];
      readonly required_for_evolution: {
        name: string;
        /** Format: uri */
        url: string;
      }[];
    };
    GenderSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    GenerationDetail: {
      readonly id: number;
      name: string;
      readonly abilities: components["schemas"]["AbilitySummary"][];
      main_region: components["schemas"]["RegionSummary"];
      readonly moves: components["schemas"]["MoveSummary"][];
      readonly names: components["schemas"]["GenerationName"][];
      readonly pokemon_species: components["schemas"]["PokemonSpeciesSummary"][];
      readonly types: components["schemas"]["TypeSummary"][];
      readonly version_groups: components["schemas"]["VersionGroupSummary"][];
    };
    GenerationName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    GenerationSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    GrowthRateDescription: {
      description?: string;
      language: components["schemas"]["LanguageSummary"];
    };
    GrowthRateDetail: {
      readonly id: number;
      name: string;
      formula: string;
      readonly descriptions: components["schemas"]["GrowthRateDescription"][];
      readonly levels: components["schemas"]["Experience"][];
      readonly pokemon_species: components["schemas"]["PokemonSpeciesSummary"][];
    };
    GrowthRateSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    ItemAttributeDescription: {
      description?: string;
      language: components["schemas"]["LanguageSummary"];
    };
    ItemAttributeDetail: {
      readonly id: number;
      name: string;
      readonly descriptions: components["schemas"]["ItemAttributeDescription"][];
      readonly items: {
        name: string;
        /** Format: uri */
        url: string;
      }[];
      readonly names: components["schemas"]["ItemAttributeName"][];
    };
    ItemAttributeName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    ItemAttributeSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    ItemCategoryDetail: {
      readonly id: number;
      name: string;
      readonly items: components["schemas"]["ItemSummary"][];
      readonly names: components["schemas"]["ItemCategoryName"][];
      pocket: components["schemas"]["ItemPocketSummary"];
    };
    ItemCategoryName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    ItemCategorySummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    ItemDetail: {
      readonly id: number;
      name: string;
      cost?: number | null;
      fling_power?: number | null;
      fling_effect: components["schemas"]["ItemFlingEffectSummary"];
      readonly attributes: {
        name: string;
        /** Format: uri */
        url: string;
      }[];
      category: components["schemas"]["ItemCategorySummary"];
      readonly effect_entries: components["schemas"]["ItemEffectText"][];
      readonly flavor_text_entries: components["schemas"]["ItemFlavorText"][];
      readonly game_indices: components["schemas"]["ItemGameIndex"][];
      readonly names: components["schemas"]["ItemName"][];
      readonly held_by_pokemon: {
        pokemon: {
          name: string;
          /** Format: uri */
          url: string;
        };
        "version-details": {
          /** Format: int32 */
          rarity: number;
          version: {
            name: string;
            /** Format: uri */
            url: string;
          };
        }[];
      }[];
      readonly sprites: {
        /** Format: uri */
        default: string;
      };
      readonly baby_trigger_for: {
        /** Format: uri */
        url: string;
      };
      readonly machines: {
        /** Format: uri */
        machine: string;
        version_group: {
          name: string;
          /** Format: uri */
          url: string;
        };
      }[];
    };
    ItemEffectText: {
      effect: string;
      short_effect: string;
      language: components["schemas"]["LanguageSummary"];
    };
    ItemFlavorText: {
      text: string;
      version_group: components["schemas"]["VersionGroupSummary"];
      language: components["schemas"]["LanguageSummary"];
    };
    ItemFlingEffectDetail: {
      readonly id: number;
      name: string;
      readonly effect_entries: components["schemas"]["ItemFlingEffectEffectText"][];
      readonly items: components["schemas"]["ItemSummary"][];
    };
    ItemFlingEffectEffectText: {
      effect: string;
      language: components["schemas"]["LanguageSummary"];
    };
    ItemFlingEffectSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    ItemGameIndex: {
      game_index: number;
      generation: components["schemas"]["GenerationSummary"];
    };
    ItemName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    ItemPocketDetail: {
      readonly id: number;
      name: string;
      readonly categories: components["schemas"]["ItemCategorySummary"][];
      readonly names: components["schemas"]["ItemPocketName"][];
    };
    ItemPocketName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    ItemPocketSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    ItemSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    LanguageDetail: {
      readonly id: number;
      name: string;
      official?: boolean;
      iso639: string;
      iso3166: string;
      readonly names: components["schemas"]["LanguageName"][];
    };
    LanguageName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    LanguageSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    LocationAreaDetail: {
      readonly id: number;
      name: string;
      game_index: number;
      readonly encounter_method_rates: {
        encounter_method: {
          name: string;
          /** Format: uri */
          url: string;
        };
        version_details: {
          /** Format: int32 */
          rate: number;
          version: {
            name: string;
            /** Format: uri */
            url: string;
          };
        }[];
      }[];
      location: components["schemas"]["LocationSummary"];
      readonly names: components["schemas"]["LocationAreaName"][];
      readonly pokemon_encounters: {
        pokemon: {
          name: string;
          /** Format: uri */
          url: string;
        };
        version_details: {
          version: {
            name: string;
            /** Format: uri */
            url: string;
          };
          /** Format: int32 */
          max_chance: number;
          encounter_details: {
            /** Format: int32 */
            min_level: number;
            /** Format: int32 */
            max_level: number;
            condition_values?: {
              name: string;
              /** Format: uri */
              url: string;
            };
            /** Format: int32 */
            chance: number;
            method: {
              name: string;
              /** Format: uri */
              url: string;
            };
          };
        }[];
      }[];
    };
    LocationAreaName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    LocationAreaSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    LocationDetail: {
      readonly id: number;
      name: string;
      region: components["schemas"]["RegionSummary"];
      readonly names: components["schemas"]["LocationName"][];
      readonly game_indices: components["schemas"]["LocationGameIndex"][];
      readonly areas: components["schemas"]["LocationAreaSummary"][];
    };
    LocationGameIndex: {
      game_index: number;
      generation: components["schemas"]["GenerationSummary"];
    };
    LocationName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    LocationSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    MachineDetail: {
      readonly id: number;
      item: components["schemas"]["ItemSummary"];
      version_group: components["schemas"]["VersionGroupSummary"];
      move: components["schemas"]["MoveSummary"];
    };
    MachineSummary: {
      /** Format: uri */
      readonly url: string;
    };
    MoveBattleStyleDetail: {
      readonly id: number;
      name: string;
      readonly names: components["schemas"]["MoveBattleStyleName"][];
    };
    MoveBattleStyleName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    MoveBattleStyleSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    MoveChange: {
      accuracy?: number | null;
      power?: number | null;
      pp?: number | null;
      effect_chance: number;
      readonly effect_entries: {
        effect: string;
        short_effect: string;
        language: {
          name: string;
          /** Format: uri */
          url: string;
        };
      }[];
      type: components["schemas"]["TypeSummary"];
      version_group: components["schemas"]["VersionGroupSummary"];
    };
    MoveDamageClassDescription: {
      description?: string;
      language: components["schemas"]["LanguageSummary"];
    };
    MoveDamageClassDetail: {
      readonly id: number;
      name: string;
      readonly descriptions: components["schemas"]["MoveDamageClassDescription"][];
      readonly moves: components["schemas"]["MoveSummary"][];
      readonly names: components["schemas"]["MoveDamageClassName"][];
    };
    MoveDamageClassName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    MoveDamageClassSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    MoveDetail: {
      readonly id: number;
      name: string;
      accuracy?: number | null;
      effect_chance: number;
      pp?: number | null;
      priority?: number | null;
      power?: number | null;
      readonly contest_combos: {
        normal: {
          use_before:
            | {
                name: string;
                /** Format: uri */
                url: string;
              }[]
            | null;
          use_after:
            | {
                name: string;
                /** Format: uri */
                url: string;
              }[]
            | null;
        };
        super: {
          use_before:
            | {
                name: string;
                /** Format: uri */
                url: string;
              }[]
            | null;
          use_after:
            | {
                name: string;
                /** Format: uri */
                url: string;
              }[]
            | null;
        };
      };
      contest_type: components["schemas"]["ContestTypeSummary"];
      contest_effect: components["schemas"]["ContestEffectSummary"];
      damage_class: components["schemas"]["MoveDamageClassSummary"];
      readonly effect_entries: {
        effect: string;
        short_effect: string;
        language: {
          name: string;
          /** Format: uri */
          url: string;
        };
      }[];
      readonly effect_changes: {
        effect_entries: {
          effect: string;
          language: {
            name: string;
            /** Format: uri */
            url: string;
          };
        }[];
        version_group: {
          name: string;
          /** Format: uri */
          url: string;
        };
      }[];
      generation: components["schemas"]["GenerationSummary"];
      readonly meta: components["schemas"]["MoveMeta"];
      readonly names: components["schemas"]["MoveName"][];
      readonly past_values: components["schemas"]["MoveChange"][];
      readonly stat_changes: {
        /** Format: int32 */
        change: number;
        stat: {
          name: string;
          /** Format: uri */
          url: string;
        };
      }[];
      super_contest_effect: components["schemas"]["SuperContestEffectSummary"];
      target: components["schemas"]["MoveTargetSummary"];
      type: components["schemas"]["TypeSummary"];
      readonly machines: {
        machine: {
          /** Format: uri */
          url: string;
        };
        version_group: {
          name: string;
          /** Format: uri */
          url: string;
        };
      }[];
      readonly flavor_text_entries: components["schemas"]["MoveFlavorText"][];
      readonly learned_by_pokemon: {
        name: string;
        /** Format: uri */
        url: string;
      }[];
    };
    MoveFlavorText: {
      flavor_text: string;
      language: components["schemas"]["LanguageSummary"];
      version_group: components["schemas"]["VersionGroupSummary"];
    };
    MoveLearnMethodDescription: {
      description?: string;
      language: components["schemas"]["LanguageSummary"];
    };
    MoveLearnMethodDetail: {
      readonly id: number;
      name: string;
      readonly names: components["schemas"]["MoveLearnMethodName"][];
      readonly descriptions: components["schemas"]["MoveLearnMethodDescription"][];
      readonly version_groups: {
        name: string;
        /** Format: uri */
        url: string;
      }[];
    };
    MoveLearnMethodName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    MoveLearnMethodSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    MoveMeta: {
      ailment: components["schemas"]["MoveMetaAilmentSummary"];
      category: components["schemas"]["MoveMetaCategorySummary"];
      min_hits?: number | null;
      max_hits?: number | null;
      min_turns?: number | null;
      max_turns?: number | null;
      drain?: number | null;
      healing?: number | null;
      crit_rate?: number | null;
      ailment_chance?: number | null;
      flinch_chance?: number | null;
      stat_chance?: number | null;
    };
    MoveMetaAilmentDetail: {
      readonly id: number;
      name: string;
      readonly moves: {
        name: string;
        /** Format: uri */
        url: string;
      }[];
      readonly names: components["schemas"]["MoveMetaAilmentName"][];
    };
    MoveMetaAilmentName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    MoveMetaAilmentSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    MoveMetaCategoryDescription: {
      description?: string;
      language: components["schemas"]["LanguageSummary"];
    };
    MoveMetaCategoryDetail: {
      readonly id: number;
      name: string;
      readonly descriptions: components["schemas"]["MoveMetaCategoryDescription"][];
      readonly moves: {
        name: string;
        /** Format: uri */
        url: string;
      }[];
    };
    MoveMetaCategorySummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    MoveName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    MoveSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    MoveTargetDescription: {
      description?: string;
      language: components["schemas"]["LanguageSummary"];
    };
    MoveTargetDetail: {
      readonly id: number;
      name: string;
      readonly descriptions: components["schemas"]["MoveTargetDescription"][];
      readonly moves: components["schemas"]["MoveSummary"][];
      readonly names: components["schemas"]["MoveTargetName"][];
    };
    MoveTargetName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    MoveTargetSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    NatureBattleStylePreference: {
      low_hp_preference: number;
      high_hp_preference: number;
      move_battle_style: components["schemas"]["MoveBattleStyleSummary"];
    };
    NatureDetail: {
      readonly id: number;
      name: string;
      decreased_stat: components["schemas"]["StatSummary"];
      increased_stat: components["schemas"]["StatSummary"];
      likes_flavor: components["schemas"]["BerryFlavorSummary"];
      hates_flavor: components["schemas"]["BerryFlavorSummary"];
      readonly berries: components["schemas"]["BerrySummary"][];
      readonly pokeathlon_stat_changes: {
        /** Format: int32 */
        max_change: number;
        pokeathlon_stat: {
          name: string;
          /** Format: uri */
          url: string;
        };
      }[];
      readonly move_battle_style_preferences: components["schemas"]["NatureBattleStylePreference"][];
      readonly names: components["schemas"]["NatureName"][];
    };
    NatureName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    NatureSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    PaginatedAbilitySummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["AbilitySummary"][];
    };
    PaginatedBerryFirmnessSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["BerryFirmnessSummary"][];
    };
    PaginatedBerryFlavorSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["BerryFlavorSummary"][];
    };
    PaginatedBerrySummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["BerrySummary"][];
    };
    PaginatedCharacteristicSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["CharacteristicSummary"][];
    };
    PaginatedContestEffectSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["ContestEffectSummary"][];
    };
    PaginatedContestTypeSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["ContestTypeSummary"][];
    };
    PaginatedEggGroupSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["EggGroupSummary"][];
    };
    PaginatedEncounterConditionSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["EncounterConditionSummary"][];
    };
    PaginatedEncounterConditionValueSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["EncounterConditionValueSummary"][];
    };
    PaginatedEncounterMethodSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["EncounterMethodSummary"][];
    };
    PaginatedEvolutionChainSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["EvolutionChainSummary"][];
    };
    PaginatedEvolutionTriggerSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["EvolutionTriggerSummary"][];
    };
    PaginatedGenderSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["GenderSummary"][];
    };
    PaginatedGenerationSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["GenerationSummary"][];
    };
    PaginatedGrowthRateSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["GrowthRateSummary"][];
    };
    PaginatedItemAttributeSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["ItemAttributeSummary"][];
    };
    PaginatedItemCategorySummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["ItemCategorySummary"][];
    };
    PaginatedItemFlingEffectSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["ItemFlingEffectSummary"][];
    };
    PaginatedItemPocketSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["ItemPocketSummary"][];
    };
    PaginatedItemSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["ItemSummary"][];
    };
    PaginatedLanguageSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["LanguageSummary"][];
    };
    PaginatedLocationAreaSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["LocationAreaSummary"][];
    };
    PaginatedLocationSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["LocationSummary"][];
    };
    PaginatedMachineSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["MachineSummary"][];
    };
    PaginatedMoveBattleStyleSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["MoveBattleStyleSummary"][];
    };
    PaginatedMoveDamageClassSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["MoveDamageClassSummary"][];
    };
    PaginatedMoveLearnMethodSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["MoveLearnMethodSummary"][];
    };
    PaginatedMoveMetaAilmentSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["MoveMetaAilmentSummary"][];
    };
    PaginatedMoveMetaCategorySummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["MoveMetaCategorySummary"][];
    };
    PaginatedMoveSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["MoveSummary"][];
    };
    PaginatedMoveTargetSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["MoveTargetSummary"][];
    };
    PaginatedNatureSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["NatureSummary"][];
    };
    PaginatedPalParkAreaSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["PalParkAreaSummary"][];
    };
    PaginatedPokeathlonStatSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["PokeathlonStatSummary"][];
    };
    PaginatedPokedexSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["PokedexSummary"][];
    };
    PaginatedPokemonColorSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["PokemonColorSummary"][];
    };
    PaginatedPokemonFormSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["PokemonFormSummary"][];
    };
    PaginatedPokemonHabitatSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["PokemonHabitatSummary"][];
    };
    PaginatedPokemonShapeSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["PokemonShapeSummary"][];
    };
    PaginatedPokemonSpeciesSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["PokemonSpeciesSummary"][];
    };
    PaginatedPokemonSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["PokemonSummary"][];
    };
    PaginatedRegionSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["RegionSummary"][];
    };
    PaginatedStatSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["StatSummary"][];
    };
    PaginatedSuperContestEffectSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["SuperContestEffectSummary"][];
    };
    PaginatedTypeSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["TypeSummary"][];
    };
    PaginatedVersionGroupSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["VersionGroupSummary"][];
    };
    PaginatedVersionSummaryList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=400&limit=100
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?offset=200&limit=100
       */
      previous?: string | null;
      results?: components["schemas"]["VersionSummary"][];
    };
    PalParkAreaDetail: {
      readonly id: number;
      name: string;
      readonly names: components["schemas"]["PalParkAreaName"][];
      readonly pokemon_encounters: {
        /** Format: int32 */
        base_score: number;
        "pokemon-species": {
          name: string;
          /** Format: uri */
          url: string;
        };
        /** Format: int32 */
        rate: number;
      }[];
    };
    PalParkAreaName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    PalParkAreaSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    PokeathlonStatDetail: {
      readonly id: number;
      name: string;
      readonly affecting_natures: {
        decrease: {
          /** Format: int32 */
          max_change: number;
          nature: {
            name: string;
            /** Format: uri */
            url: string;
          };
        }[];
        increase: {
          /** Format: int32 */
          max_change: number;
          nature: {
            name: string;
            /** Format: uri */
            url: string;
          };
        }[];
      };
      readonly names: components["schemas"]["PokeathlonStatName"][];
    };
    PokeathlonStatName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    PokeathlonStatSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    PokedexDescription: {
      description?: string;
      language: components["schemas"]["LanguageSummary"];
    };
    PokedexDetail: {
      readonly id: number;
      name: string;
      is_main_series?: boolean;
      readonly descriptions: components["schemas"]["PokedexDescription"][];
      readonly names: components["schemas"]["PokedexName"][];
      readonly pokemon_entries: {
        /** Format: int32 */
        entry_number: number;
        pokemon_species: {
          name: string;
          /** Format: uri */
          url: string;
        };
      }[];
      region: components["schemas"]["RegionSummary"];
      readonly version_groups: {
        name: string;
        /** Format: uri */
        url: string;
      }[];
    };
    PokedexName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    PokedexSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    PokemonColorDetail: {
      readonly id: number;
      name: string;
      readonly names: components["schemas"]["PokemonColorName"][];
      readonly pokemon_species: components["schemas"]["PokemonSpeciesSummary"][];
    };
    PokemonColorName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    PokemonColorSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    PokemonDetail: {
      readonly id: number;
      name: string;
      base_experience?: number | null;
      height?: number | null;
      is_default?: boolean;
      order?: number | null;
      weight?: number | null;
      readonly abilities: {
        ability: {
          name: string;
          /** Format: uri */
          url: string;
        };
        is_hidden: boolean;
        /** Format: int32 */
        slot: number;
      }[];
      readonly past_abilities: {
        abilities: {
          ability: {
            name: string;
            /** Format: uri */
            url: string;
          };
          is_hidden: boolean;
          /** Format: int32 */
          slot: number;
        }[];
        generation: {
          name: string;
          /** Format: uri */
          url: string;
        };
      }[];
      readonly forms: components["schemas"]["PokemonFormSummary"][];
      readonly game_indices: components["schemas"]["PokemonGameIndex"][];
      readonly held_items: {
        item: {
          name: string;
          /** Format: uri */
          url: string;
        };
        version_details: {
          /** Format: int32 */
          rarity: number;
          version: {
            name: string;
            /** Format: uri */
            url: string;
          };
        }[];
      };
      readonly location_area_encounters: string;
      readonly moves: {
        move: {
          name: string;
          /** Format: uri */
          url: string;
        };
        version_group_details: {
          /** Format: int32 */
          level_learned_at: number;
          move_learn_method: {
            name: string;
            /** Format: uri */
            url: string;
          };
          version_group: {
            name: string;
            /** Format: uri */
            url: string;
          };
        }[];
      }[];
      species: components["schemas"]["PokemonSpeciesSummary"];
      readonly sprites: {
        /** Format: uri */
        front_default?: string;
      } & {
        [key: string]: string | null;
      };
      readonly cries: {
        /** Format: uri */
        latest: string;
        /** Format: uri */
        legacy: string;
      };
      readonly stats: components["schemas"]["PokemonStat"][];
      readonly types: {
        /** Format: int32 */
        slot: number;
        type: {
          name: string;
          /** Format: uri */
          url: string;
        };
      }[];
      readonly past_types: {
        generation: {
          name: string;
          /** Format: uri */
          url: string;
        };
        types: {
          /** Format: int32 */
          slot: number;
          type: {
            name: string;
            /** Format: uri */
            url: string;
          };
        }[];
      }[];
    };
    PokemonDexEntry: {
      entry_number: number;
      pokedex: components["schemas"]["PokedexSummary"];
    };
    PokemonFormDetail: {
      readonly id: number;
      name: string;
      order?: number | null;
      form_order?: number | null;
      is_default?: boolean;
      is_battle_only?: boolean;
      is_mega?: boolean;
      form_name: string;
      pokemon: components["schemas"]["PokemonSummary"];
      readonly sprites: {
        /** Format: uri */
        default?: string;
      } & {
        [key: string]: string | null;
      };
      version_group: components["schemas"]["VersionGroupSummary"];
      readonly form_names: {
        language: {
          name: string;
          /** Format: uri */
          url: string;
        };
        name: string;
      }[];
      readonly names: {
        language: {
          name: string;
          /** Format: uri */
          url: string;
        };
        name: string;
      }[];
      readonly types: {
        /** Format: int32 */
        slot: number;
        type: {
          name: string;
          /** Format: uri */
          url: string;
        };
      }[];
    };
    PokemonFormSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    PokemonGameIndex: {
      game_index: number;
      version: components["schemas"]["VersionSummary"];
    };
    PokemonHabitatDetail: {
      readonly id: number;
      name: string;
      readonly names: components["schemas"]["PokemonHabitatName"][];
      readonly pokemon_species: components["schemas"]["PokemonSpeciesSummary"][];
    };
    PokemonHabitatName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    PokemonHabitatSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    PokemonShapeDetail: {
      readonly id: number;
      name: string;
      readonly awesome_names: {
        awesome_name: string;
        language: {
          name: string;
          /** Format: uri */
          url: string;
        };
      }[];
      readonly names: {
        /** Format: uri */
        url: string;
        name: string;
      }[];
      readonly pokemon_species: components["schemas"]["PokemonSpeciesSummary"][];
    };
    PokemonShapeSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    PokemonSpeciesDescription: {
      description?: string;
      language: components["schemas"]["LanguageSummary"];
    };
    PokemonSpeciesDetail: {
      readonly id: number;
      name: string;
      order?: number | null;
      gender_rate?: number | null;
      capture_rate?: number | null;
      base_happiness?: number | null;
      is_baby?: boolean;
      is_legendary?: boolean;
      is_mythical?: boolean;
      hatch_counter?: number | null;
      has_gender_differences?: boolean;
      forms_switchable?: boolean;
      growth_rate: components["schemas"]["GrowthRateSummary"];
      readonly pokedex_numbers: components["schemas"]["PokemonDexEntry"][];
      readonly egg_groups: {
        name: string;
        /** Format: uri */
        url: string;
      }[];
      color: components["schemas"]["PokemonColorSummary"];
      shape: components["schemas"]["PokemonShapeSummary"];
      evolves_from_species: components["schemas"]["PokemonSpeciesSummary"];
      evolution_chain: components["schemas"]["EvolutionChainSummary"];
      habitat: components["schemas"]["PokemonHabitatSummary"];
      generation: components["schemas"]["GenerationSummary"];
      readonly names: {
        language: {
          name: string;
          /** Format: uri */
          url: string;
        };
        name: string;
      }[];
      readonly pal_park_encounters: {
        area: {
          name: string;
          /** Format: uri */
          url: string;
        };
        /** Format: int32 */
        base_score: number;
        /** Format: int32 */
        rate: number;
      }[];
      readonly form_descriptions: components["schemas"]["PokemonSpeciesDescription"][];
      readonly flavor_text_entries: components["schemas"]["PokemonSpeciesFlavorText"][];
      readonly genera: {
        genus: string;
        language: {
          name: string;
          /** Format: uri */
          url: string;
        };
      }[];
      readonly varieties: {
        is_default: boolean;
        pokemon: {
          name: string;
          /** Format: uri */
          url: string;
        };
      }[];
    };
    PokemonSpeciesFlavorText: {
      flavor_text: string;
      language: components["schemas"]["LanguageSummary"];
      version: components["schemas"]["VersionSummary"];
    };
    PokemonSpeciesSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    PokemonStat: {
      base_stat: number;
      effort: number;
      stat: components["schemas"]["StatSummary"];
    };
    PokemonSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    RegionDetail: {
      readonly id: number;
      name: string;
      readonly locations: components["schemas"]["LocationSummary"][];
      readonly main_generation: components["schemas"]["GenerationSummary"];
      readonly names: components["schemas"]["RegionName"][];
      readonly pokedexes: components["schemas"]["PokedexSummary"][];
      readonly version_groups: {
        name: string;
        /** Format: uri */
        url: string;
      }[];
    };
    RegionName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    RegionSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    StatDetail: {
      readonly id: number;
      name: string;
      game_index: number;
      is_battle_only?: boolean;
      readonly affecting_moves: {
        increase: {
          /** Format: int32 */
          change: number;
          move: {
            name: string;
            /** Format: uri */
            url: string;
          };
        }[];
        decrease: {
          /** Format: int32 */
          change: number;
          move: {
            name: string;
            /** Format: uri */
            url: string;
          };
        }[];
      };
      readonly affecting_natures: {
        increase: {
          name: string;
          /** Format: uri */
          url: string;
        }[];
        decrease: {
          name: string;
          /** Format: uri */
          url: string;
        }[];
      };
      readonly characteristics: components["schemas"]["CharacteristicSummary"][];
      move_damage_class: components["schemas"]["MoveDamageClassSummary"];
      readonly names: components["schemas"]["StatName"][];
    };
    StatName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    StatSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    SuperContestEffectDetail: {
      readonly id: number;
      appeal: number;
      readonly flavor_text_entries: components["schemas"]["SuperContestEffectFlavorText"][];
      readonly moves: components["schemas"]["MoveSummary"][];
    };
    SuperContestEffectFlavorText: {
      flavor_text: string;
      language: components["schemas"]["LanguageSummary"];
    };
    SuperContestEffectSummary: {
      /** Format: uri */
      readonly url: string;
    };
    /** @description Serializer for the Type resource */
    TypeDetail: {
      readonly id: number;
      name: string;
      readonly damage_relations: {
        no_damage_to: {
          name: string;
          /** Format: uri */
          url: string;
        }[];
        half_damage_to: {
          name: string;
          /** Format: uri */
          url: string;
        }[];
        double_damage_to: {
          name: string;
          /** Format: uri */
          url: string;
        }[];
        no_damage_from: {
          name: string;
          /** Format: uri */
          url: string;
        }[];
        half_damage_from: {
          name: string;
          /** Format: uri */
          url: string;
        }[];
        double_damage_from: {
          name: string;
          /** Format: uri */
          url: string;
        }[];
      };
      readonly past_damage_relations: {
        generation: {
          name: string;
          /** Format: uri */
          url: string;
        };
        damage_relations: {
          no_damage_to: {
            name: string;
            /** Format: uri */
            url: string;
          }[];
          half_damage_to: {
            name: string;
            /** Format: uri */
            url: string;
          }[];
          double_damage_to: {
            name: string;
            /** Format: uri */
            url: string;
          }[];
          no_damage_from: {
            name: string;
            /** Format: uri */
            url: string;
          }[];
          half_damage_from: {
            name: string;
            /** Format: uri */
            url: string;
          }[];
          double_damage_from: {
            name: string;
            /** Format: uri */
            url: string;
          }[];
        };
      }[];
      readonly game_indices: components["schemas"]["TypeGameIndex"][];
      generation: components["schemas"]["GenerationSummary"];
      move_damage_class: components["schemas"]["MoveDamageClassSummary"];
      readonly names: components["schemas"]["AbilityName"][];
      readonly pokemon: {
        slot?: number;
        pokemon?: {
          /** @description The name of the pokemon */
          name?: string;
          /**
           * Format: uri
           * @description The URL to get more information about the pokemon
           */
          url?: string;
        };
      }[];
      readonly moves: components["schemas"]["MoveSummary"][];
      readonly sprites: {
        [key: string]: {
          [key: string]: {
            /** Format: uri */
            "name-icon"?: string;
          };
        };
      };
    };
    TypeGameIndex: {
      game_index: number;
      generation: components["schemas"]["GenerationSummary"];
    };
    TypeSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    /** @description Should have a link to Version Group info but the Circular
     *     dependency and compilation order fight eachother and I'm
     *     not sure how to add anything other than a hyperlink */
    VersionDetail: {
      readonly id: number;
      name: string;
      readonly names: components["schemas"]["VersionName"][];
      version_group: components["schemas"]["VersionGroupSummary"];
    };
    VersionGroupDetail: {
      readonly id: number;
      name: string;
      order?: number | null;
      generation: components["schemas"]["GenerationSummary"];
      readonly move_learn_methods: {
        name: string;
        /** Format: uri */
        url: string;
      }[];
      readonly pokedexes: {
        name: string;
        /** Format: uri */
        url: string;
      }[];
      readonly regions: {
        name: string;
        /** Format: uri */
        url: string;
      }[];
      readonly versions: components["schemas"]["VersionSummary"][];
    };
    VersionGroupSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
    VersionName: {
      name: string;
      language: components["schemas"]["LanguageSummary"];
    };
    VersionSummary: {
      name: string;
      /** Format: uri */
      readonly url: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  ability_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedAbilitySummaryList"];
        };
      };
    };
  };
  ability_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AbilityDetail"];
        };
      };
    };
  };
  berry_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedBerrySummaryList"];
        };
      };
    };
  };
  berry_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["BerryDetail"];
        };
      };
    };
  };
  berry_firmness_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedBerryFirmnessSummaryList"];
        };
      };
    };
  };
  berry_firmness_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["BerryFirmnessDetail"];
        };
      };
    };
  };
  berry_flavor_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedBerryFlavorSummaryList"];
        };
      };
    };
  };
  berry_flavor_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["BerryFlavorDetail"];
        };
      };
    };
  };
  characteristic_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedCharacteristicSummaryList"];
        };
      };
    };
  };
  characteristic_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["CharacteristicDetail"];
        };
      };
    };
  };
  contest_type_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedContestTypeSummaryList"];
        };
      };
    };
  };
  contest_type_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ContestTypeDetail"];
        };
      };
    };
  };
  contest_effect_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedContestEffectSummaryList"];
        };
      };
    };
  };
  contest_effect_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ContestEffectDetail"];
        };
      };
    };
  };
  egg_group_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedEggGroupSummaryList"];
        };
      };
    };
  };
  egg_group_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["EggGroupDetail"];
        };
      };
    };
  };
  encounter_method_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedEncounterMethodSummaryList"];
        };
      };
    };
  };
  encounter_method_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["EncounterMethodDetail"];
        };
      };
    };
  };
  encounter_condition_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedEncounterConditionSummaryList"];
        };
      };
    };
  };
  encounter_condition_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["EncounterConditionDetail"];
        };
      };
    };
  };
  encounter_condition_value_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedEncounterConditionValueSummaryList"];
        };
      };
    };
  };
  encounter_condition_value_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["EncounterConditionValueDetail"];
        };
      };
    };
  };
  evolution_chain_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedEvolutionChainSummaryList"];
        };
      };
    };
  };
  evolution_chain_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["EvolutionChainDetail"];
        };
      };
    };
  };
  evolution_trigger_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedEvolutionTriggerSummaryList"];
        };
      };
    };
  };
  evolution_trigger_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["EvolutionTriggerDetail"];
        };
      };
    };
  };
  generation_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedGenerationSummaryList"];
        };
      };
    };
  };
  generation_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GenerationDetail"];
        };
      };
    };
  };
  gender_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedGenderSummaryList"];
        };
      };
    };
  };
  gender_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GenderDetail"];
        };
      };
    };
  };
  growth_rate_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedGrowthRateSummaryList"];
        };
      };
    };
  };
  growth_rate_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GrowthRateDetail"];
        };
      };
    };
  };
  item_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedItemSummaryList"];
        };
      };
    };
  };
  item_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ItemDetail"];
        };
      };
    };
  };
  item_category_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedItemCategorySummaryList"];
        };
      };
    };
  };
  item_category_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ItemCategoryDetail"];
        };
      };
    };
  };
  item_attribute_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedItemAttributeSummaryList"];
        };
      };
    };
  };
  item_attribute_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ItemAttributeDetail"];
        };
      };
    };
  };
  item_fling_effect_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedItemFlingEffectSummaryList"];
        };
      };
    };
  };
  item_fling_effect_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ItemFlingEffectDetail"];
        };
      };
    };
  };
  item_pocket_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedItemPocketSummaryList"];
        };
      };
    };
  };
  item_pocket_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ItemPocketDetail"];
        };
      };
    };
  };
  language_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedLanguageSummaryList"];
        };
      };
    };
  };
  language_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["LanguageDetail"];
        };
      };
    };
  };
  location_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedLocationSummaryList"];
        };
      };
    };
  };
  location_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["LocationDetail"];
        };
      };
    };
  };
  location_area_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedLocationAreaSummaryList"];
        };
      };
    };
  };
  location_area_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description A unique integer value identifying this location area. */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["LocationAreaDetail"];
        };
      };
    };
  };
  machine_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedMachineSummaryList"];
        };
      };
    };
  };
  machine_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MachineDetail"];
        };
      };
    };
  };
  move_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedMoveSummaryList"];
        };
      };
    };
  };
  move_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MoveDetail"];
        };
      };
    };
  };
  move_ailment_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedMoveMetaAilmentSummaryList"];
        };
      };
    };
  };
  move_ailment_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MoveMetaAilmentDetail"];
        };
      };
    };
  };
  move_battle_style_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedMoveBattleStyleSummaryList"];
        };
      };
    };
  };
  move_battle_style_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MoveBattleStyleDetail"];
        };
      };
    };
  };
  move_category_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedMoveMetaCategorySummaryList"];
        };
      };
    };
  };
  move_category_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MoveMetaCategoryDetail"];
        };
      };
    };
  };
  move_damage_class_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedMoveDamageClassSummaryList"];
        };
      };
    };
  };
  move_damage_class_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MoveDamageClassDetail"];
        };
      };
    };
  };
  move_learn_method_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedMoveLearnMethodSummaryList"];
        };
      };
    };
  };
  move_learn_method_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MoveLearnMethodDetail"];
        };
      };
    };
  };
  move_target_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedMoveTargetSummaryList"];
        };
      };
    };
  };
  move_target_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MoveTargetDetail"];
        };
      };
    };
  };
  nature_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedNatureSummaryList"];
        };
      };
    };
  };
  nature_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["NatureDetail"];
        };
      };
    };
  };
  pal_park_area_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedPalParkAreaSummaryList"];
        };
      };
    };
  };
  pal_park_area_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PalParkAreaDetail"];
        };
      };
    };
  };
  pokedex_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedPokedexSummaryList"];
        };
      };
    };
  };
  pokedex_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PokedexDetail"];
        };
      };
    };
  };
  pokemon_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedPokemonSummaryList"];
        };
      };
    };
  };
  pokemon_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PokemonDetail"];
        };
      };
    };
  };
  pokemon_color_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedPokemonColorSummaryList"];
        };
      };
    };
  };
  pokemon_color_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PokemonColorDetail"];
        };
      };
    };
  };
  pokemon_form_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedPokemonFormSummaryList"];
        };
      };
    };
  };
  pokemon_form_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PokemonFormDetail"];
        };
      };
    };
  };
  pokemon_habitat_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedPokemonHabitatSummaryList"];
        };
      };
    };
  };
  pokemon_habitat_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PokemonHabitatDetail"];
        };
      };
    };
  };
  pokemon_shape_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedPokemonShapeSummaryList"];
        };
      };
    };
  };
  pokemon_shape_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PokemonShapeDetail"];
        };
      };
    };
  };
  pokemon_species_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedPokemonSpeciesSummaryList"];
        };
      };
    };
  };
  pokemon_species_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PokemonSpeciesDetail"];
        };
      };
    };
  };
  pokeathlon_stat_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedPokeathlonStatSummaryList"];
        };
      };
    };
  };
  pokeathlon_stat_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PokeathlonStatDetail"];
        };
      };
    };
  };
  region_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedRegionSummaryList"];
        };
      };
    };
  };
  region_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["RegionDetail"];
        };
      };
    };
  };
  stat_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedStatSummaryList"];
        };
      };
    };
  };
  stat_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["StatDetail"];
        };
      };
    };
  };
  super_contest_effect_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedSuperContestEffectSummaryList"];
        };
      };
    };
  };
  super_contest_effect_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["SuperContestEffectDetail"];
        };
      };
    };
  };
  type_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedTypeSummaryList"];
        };
      };
    };
  };
  type_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TypeDetail"];
        };
      };
    };
  };
  version_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedVersionSummaryList"];
        };
      };
    };
  };
  version_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["VersionDetail"];
        };
      };
    };
  };
  version_group_list: {
    parameters: {
      query?: {
        /** @description Number of results to return per page. */
        limit?: number;
        /** @description The initial index from which to return the results. */
        offset?: number;
        /** @description > Only available locally and not at [pokeapi.co](https://pokeapi.co/docs/v2)
         *     Case-insensitive query applied on the `name` property.  */
        q?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedVersionGroupSummaryList"];
        };
      };
    };
  };
  version_group_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description This parameter can be a string or an integer. */
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["VersionGroupDetail"];
        };
      };
    };
  };
  pokemon_encounters_retrieve: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        pokemon_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            location_area: {
              /** @example cerulean-city-area */
              name: string;
              /**
               * Format: uri
               * @example https://pokeapi.co/api/v2/location-area/281/
               */
              url: string;
            };
            version_details: {
              encounter_details: {
                /** @example 100 */
                chance: number;
                condition_values: {
                  /** @example story-progress-beat-red */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://pokeapi.co/api/v2/encounter-condition-value/55/
                   */
                  url: string;
                }[];
                /** @example 10 */
                max_level: number;
                method: {
                  /** @example gift */
                  name: string;
                  /**
                   * Format: uri
                   * @example https://pokeapi.co/api/v2/encounter-method/18/
                   */
                  url: string;
                };
                /** @example 10 */
                min_level: number;
              }[];
              /** @example 100 */
              max_chance: number;
              version: {
                /** @example red */
                name: string;
                /**
                 * Format: uri
                 * @example https://pokeapi.co/api/v2/version/1/
                 */
                url: string;
              };
            }[];
          }[];
        };
      };
    };
  };
}
